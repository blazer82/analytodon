/* tslint:disable */
/* eslint-disable */
/**
 * Analytodon API
 * This is the API documentation for Analytodon - the open-source Mastodon analytics tool.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AllTopTootsResponseDto,
} from '../models/index';
import {
    AllTopTootsResponseDtoFromJSON,
    AllTopTootsResponseDtoToJSON,
} from '../models/index';

export interface TootsControllerGetTopTootsSummaryRequest {
    accountId: string;
    timeframe: string;
}

/**
 * 
 */
export class TootsApi extends runtime.BaseAPI {

    /**
     * Get a summary of top toots by various rankings for an account
     */
    async tootsControllerGetTopTootsSummaryRaw(requestParameters: TootsControllerGetTopTootsSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AllTopTootsResponseDto>> {
        if (requestParameters['accountId'] == null) {
            throw new runtime.RequiredError(
                'accountId',
                'Required parameter "accountId" was null or undefined when calling tootsControllerGetTopTootsSummary().'
            );
        }

        if (requestParameters['timeframe'] == null) {
            throw new runtime.RequiredError(
                'timeframe',
                'Required parameter "timeframe" was null or undefined when calling tootsControllerGetTopTootsSummary().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['timeframe'] != null) {
            queryParameters['timeframe'] = requestParameters['timeframe'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/accounts/{accountId}/toots/top-summary`.replace(`{${"accountId"}}`, encodeURIComponent(String(requestParameters['accountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AllTopTootsResponseDtoFromJSON(jsonValue));
    }

    /**
     * Get a summary of top toots by various rankings for an account
     */
    async tootsControllerGetTopTootsSummary(requestParameters: TootsControllerGetTopTootsSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AllTopTootsResponseDto> {
        const response = await this.tootsControllerGetTopTootsSummaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
