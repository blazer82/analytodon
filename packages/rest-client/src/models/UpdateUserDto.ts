/* tslint:disable */
/* eslint-disable */
/**
 * Analytodon API
 * This is the API documentation for Analytodon - the open-source Mastodon analytics tool.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserDto
 */
export interface UpdateUserDto {
    /**
     * User email address
     * @type {string}
     * @memberof UpdateUserDto
     */
    email?: string;
    /**
     * New user password (at least 8 characters)
     * @type {string}
     * @memberof UpdateUserDto
     */
    password?: string;
    /**
     * User role
     * @type {string}
     * @memberof UpdateUserDto
     */
    role?: UpdateUserDtoRoleEnum;
    /**
     * Is the user account active?
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    isActive?: boolean;
    /**
     * Is the user email verified?
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    emailVerified?: boolean;
    /**
     * Maximum number of accounts the user can create
     * @type {number}
     * @memberof UpdateUserDto
     */
    maxAccounts?: number;
    /**
     * Server URL user signed up with
     * @type {string}
     * @memberof UpdateUserDto
     */
    serverURLOnSignUp?: string;
    /**
     * User timezone
     * @type {string}
     * @memberof UpdateUserDto
     */
    timezone?: string;
    /**
     * List of unsubscribed email types
     * @type {Array<string>}
     * @memberof UpdateUserDto
     */
    unsubscribed?: Array<string>;
    /**
     * Has the old account deletion notice been sent?
     * @type {boolean}
     * @memberof UpdateUserDto
     */
    oldAccountDeletionNoticeSent?: boolean;
}


/**
 * @export
 */
export const UpdateUserDtoRoleEnum = {
    Admin: 'admin',
    AccountOwner: 'account-owner'
} as const;
export type UpdateUserDtoRoleEnum = typeof UpdateUserDtoRoleEnum[keyof typeof UpdateUserDtoRoleEnum];


/**
 * Check if a given object implements the UpdateUserDto interface.
 */
export function instanceOfUpdateUserDto(value: object): value is UpdateUserDto {
    return true;
}

export function UpdateUserDtoFromJSON(json: any): UpdateUserDto {
    return UpdateUserDtoFromJSONTyped(json, false);
}

export function UpdateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'role': json['role'] == null ? undefined : json['role'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'emailVerified': json['emailVerified'] == null ? undefined : json['emailVerified'],
        'maxAccounts': json['maxAccounts'] == null ? undefined : json['maxAccounts'],
        'serverURLOnSignUp': json['serverURLOnSignUp'] == null ? undefined : json['serverURLOnSignUp'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'unsubscribed': json['unsubscribed'] == null ? undefined : json['unsubscribed'],
        'oldAccountDeletionNoticeSent': json['oldAccountDeletionNoticeSent'] == null ? undefined : json['oldAccountDeletionNoticeSent'],
    };
}

export function UpdateUserDtoToJSON(json: any): UpdateUserDto {
    return UpdateUserDtoToJSONTyped(json, false);
}

export function UpdateUserDtoToJSONTyped(value?: UpdateUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'password': value['password'],
        'role': value['role'],
        'isActive': value['isActive'],
        'emailVerified': value['emailVerified'],
        'maxAccounts': value['maxAccounts'],
        'serverURLOnSignUp': value['serverURLOnSignUp'],
        'timezone': value['timezone'],
        'unsubscribed': value['unsubscribed'],
        'oldAccountDeletionNoticeSent': value['oldAccountDeletionNoticeSent'],
    };
}

