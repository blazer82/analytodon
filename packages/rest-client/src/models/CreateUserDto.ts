/* tslint:disable */
/* eslint-disable */
/**
 * Analytodon API
 * This is the API documentation for Analytodon - the open-source Mastodon analytics tool.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserDto
 */
export interface CreateUserDto {
    /**
     * User email address
     * @type {string}
     * @memberof CreateUserDto
     */
    email: string;
    /**
     * User password (at least 8 characters)
     * @type {string}
     * @memberof CreateUserDto
     */
    password: string;
    /**
     * User role
     * @type {string}
     * @memberof CreateUserDto
     */
    role: CreateUserDtoRoleEnum;
    /**
     * Is the user account active?
     * @type {boolean}
     * @memberof CreateUserDto
     */
    isActive?: boolean;
    /**
     * Maximum number of accounts the user can create
     * @type {number}
     * @memberof CreateUserDto
     */
    maxAccounts?: number;
    /**
     * Server URL user signed up with
     * @type {string}
     * @memberof CreateUserDto
     */
    serverURLOnSignUp?: string;
    /**
     * User timezone
     * @type {string}
     * @memberof CreateUserDto
     */
    timezone?: string;
}


/**
 * @export
 */
export const CreateUserDtoRoleEnum = {
    Admin: 'admin',
    AccountOwner: 'account-owner'
} as const;
export type CreateUserDtoRoleEnum = typeof CreateUserDtoRoleEnum[keyof typeof CreateUserDtoRoleEnum];


/**
 * Check if a given object implements the CreateUserDto interface.
 */
export function instanceOfCreateUserDto(value: object): value is CreateUserDto {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function CreateUserDtoFromJSON(json: any): CreateUserDto {
    return CreateUserDtoFromJSONTyped(json, false);
}

export function CreateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': json['password'],
        'role': json['role'],
        'isActive': json['isActive'] == null ? undefined : json['isActive'],
        'maxAccounts': json['maxAccounts'] == null ? undefined : json['maxAccounts'],
        'serverURLOnSignUp': json['serverURLOnSignUp'] == null ? undefined : json['serverURLOnSignUp'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
    };
}

export function CreateUserDtoToJSON(json: any): CreateUserDto {
    return CreateUserDtoToJSONTyped(json, false);
}

export function CreateUserDtoToJSONTyped(value?: CreateUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'password': value['password'],
        'role': value['role'],
        'isActive': value['isActive'],
        'maxAccounts': value['maxAccounts'],
        'serverURLOnSignUp': value['serverURLOnSignUp'],
        'timezone': value['timezone'],
    };
}

